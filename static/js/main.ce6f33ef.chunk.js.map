{"version":3,"sources":["components/GridItem.jsx","helpers/common.js","components/Palette.jsx","components/BlankItem.jsx","components/Grid2048.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","box","display","position","justifyContent","alignItems","width","height","margin","borderRadius","transition","toPercentage","num","toString","concat","GridItem","props","classes","items","id","dead","deadItems","setDeadItems","useState","bgcolor","setBgColor","useEffect","colTimeOut","setTimeout","temp","clearTimeout","x","y","val","left","top","Box","className","classNames","fadeIn","style","randomInt","max","Math","floor","random","equals","a","b","Array","length","every","v","i","KEY_BINDINGS","theme","createMuiTheme","palette","primary","main","contrastText","secondary","background","default","Palette","ThemeProvider","children","BlankItem","maxWidth","paddingBottom","border","isSpaceTaken","coords","item","addRandomItem","setItems","Object","values","shift","direction","score","setScore","lines","coordIndex","includes","entries","push","newItems","line","sort","k","splice","reverse","j","key","item2","newJ","Grid2048","n","onAnimationEnd","keys","map","App","initialItems","setInitialItems","someItems","createInitialItems","inputRef","useRef","current","focus","ref","onKeyDown","event","states","keyCode","tabIndex","CssBaseline","AppBar","padding","right","Grid","container","sm","justify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce6f33ef.chunk.js","sourcesContent":["import { Box, makeStyles } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport classNames from \"classnames\";\n\nconst useStyles = makeStyles({\n  box: {\n    display: \"flex\",\n    position: \"absolute\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"calc(25% - 16px)\",\n    height: \"calc(25% - 16px)\",\n    margin: \"8px\",\n    borderRadius: \"16px\",\n    transition: \"all 100ms linear\",\n  },\n});\n\nconst toPercentage = (num) => num.toString().concat(\"%\");\n\nconst GridItem = (props) => {\n  const classes = useStyles();\n  const { items, id, dead, deadItems, setDeadItems } = props;\n  const [bgcolor, setBgColor] = useState(dead ? \"red\" : \"blue\");\n\n  useEffect(() => {\n    let colTimeOut;\n    if (dead) {\n      setTimeout(() => {\n        const temp = { ...deadItems };\n        delete temp[id];\n        setDeadItems(temp);\n      }, 100);\n    } else {\n      colTimeOut = setTimeout(() => {\n        setBgColor(\"white\");\n      }, 100);\n    }\n    return () => {\n      clearTimeout(colTimeOut);\n    };\n  }, [dead, deadItems, id, setBgColor, setDeadItems]);\n\n  var [x, y, val] = items[id];\n\n  var left = toPercentage(x * 25);\n  var top = toPercentage(y * 25);\n\n  return (\n    <Box\n      bgcolor={bgcolor}\n      className={classNames(classes.box, classes.fadeIn)}\n      style={{ top, left }}\n    >\n      <h1> {val} </h1>\n    </Box>\n  );\n};\n\nexport default GridItem;\n","export const randomInt = (max) => Math.floor(Math.random() * max);\n\nexport const getRandomCoords = () => [randomInt(4), randomInt(4)];\n\nexport const randomId = () => randomInt(1000000);\n\nexport const getRandomNum = () => {\n  const x = Math.random();\n  if (x < 0.9) {\n    return 2;\n  } else {\n    return 4;\n  }\n};\n\nexport const equals = (a, b) => {\n  if (a === b) {\n    return true;\n  } else if (\n    a instanceof Array &&\n    b instanceof Array &&\n    a.length === b.length\n  ) {\n    return a.every((v, i) => equals(v, b[i]));\n  } else {\n    return false;\n  }\n};\n\nexport const range = (n) => [...Array(n).keys()];\n\nexport const KEY_BINDINGS = {\n  KEY_LEFT: 37,\n  KEY_UP: 38,\n  KEY_RIGHT: 39,\n  KEY_DOWN: 40,\n};\n","import React from \"react\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\n\nexport const theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#fff3e0\",\n      contrastText: \"#6d4c41\",\n    },\n    secondary: {\n      main: \"#9e9e9e\",\n      contrastText: \"#000\",\n    },\n    background: {\n      default: \"#fff3e0\",\n    },\n  },\n});\n\nexport default function Palette(props) {\n  return <ThemeProvider theme={theme}>{props.children}</ThemeProvider>;\n}\n","import { Box, makeStyles } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst useStyles = makeStyles({\n  box: {\n    display: \"flex\",\n    position: \"absolute\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"calc(25% - 16px)\",\n    height: \"calc(25% - 16px)\",\n    margin: \"8px\",\n    borderRadius: \"16px\",\n  },\n});\n\nconst toPercentage = (num) => num.toString().concat(\"%\");\n\nconst BlankItem = (props) => {\n  const classes = useStyles();\n  const { x, y } = props;\n\n  var left = toPercentage(x * 25);\n  var top = toPercentage(y * 25);\n\n  return (\n    <Box bgcolor={\"darkgrey\"} className={classes.box} style={{ top, left }} />\n  );\n};\n\nexport default BlankItem;\n","import { makeStyles } from \"@material-ui/core\";\nimport React from \"react\";\nimport GridItem from \"./GridItem\";\nimport {\n  getRandomCoords,\n  randomId,\n  getRandomNum,\n  equals,\n  range,\n} from \"../helpers/common\";\nimport { theme } from \"./Palette\";\nimport BlankItem from \"./BlankItem\";\n\nconst useStyles = makeStyles({\n  box: {\n    width: \"100%\",\n    maxWidth: \"80vh\",\n    paddingBottom: \"min(100%, 80vh)\",\n    margin: \"50px 10px 10px 10px\",\n    position: \"relative\",\n    border: \"8px solid \".concat(theme.palette.secondary.main),\n    background: theme.palette.secondary.main,\n    borderRadius: \"16px\",\n  },\n});\n\nexport const createInitialItems = () => {\n  var initialItems = {};\n  const setInitialItems = (someItems) => (initialItems = someItems);\n\n  for (var i = 0; i < 2; i++) {\n    addRandomItem(initialItems, setInitialItems);\n  }\n\n  return initialItems;\n};\n\nconst isSpaceTaken = (coords, items) => {\n  for (var item of items) {\n    if (coords[0] === item[0] && coords[1] === item[1]) {\n      return true;\n    }\n  }\n  return false;\n};\n\nconst addRandomItem = (items, setItems) => {\n  let coords;\n  do {\n    coords = getRandomCoords();\n  } while (isSpaceTaken(coords, Object.values(items)));\n\n  setItems({ ...items, [randomId()]: [...coords, getRandomNum()] });\n};\n\nexport const shift = (\n  direction,\n  items,\n  setItems,\n  score,\n  setScore,\n  deadItems,\n  setDeadItems\n) => {\n  const lines = [[], [], [], []];\n  const coordIndex = [\"left\", \"right\"].includes(direction) ? 0 : 1;\n\n  // Create grid of items\n  for (var [id, item] of Object.entries(items)) {\n    lines[item[1 - coordIndex]].push([id, item]);\n  }\n\n  const newItems = {};\n  for (var i = 0; i < lines.length; i++) {\n    const line = lines[i];\n\n    // Sort line into helpful order\n    line.sort((a, b) => a[1][coordIndex] - b[1][coordIndex]);\n\n    // Combine items in line if possible\n    for (var k = 1; k < line.length; k++) {\n      if (line[k][1][2] === line[k - 1][1][2]) {\n        line[k][1][2] = line[k][1][2] * 2;\n        setScore(score + line[k][1][2]);\n        setDeadItems({ ...deadItems, [line[k - 1][0]]: line[k - 1][1] });\n        line.splice(k - 1, 1);\n      }\n    }\n\n    // Sort line into correct order (if not already)\n    if ([\"right\", \"down\"].includes(direction)) {\n      line.reverse();\n    }\n\n    // Translate grid indexes to coordinates\n    for (var j = 0; j < line.length; j++) {\n      const [key, item2] = line[j];\n\n      const newJ = [\"right\", \"down\"].includes(direction) ? 3 - j : j;\n\n      newItems[key] = [];\n      newItems[key][1 - coordIndex] = i;\n      newItems[key][coordIndex] = newJ;\n      newItems[key][2] = item2[2];\n    }\n  }\n  setItems(newItems);\n\n  // Add item to the grid\n  if (!equals(Object.values(newItems), Object.values(items))) {\n    setTimeout(() => {\n      addRandomItem(newItems, setItems);\n    }, 1);\n  }\n};\n\nconst Grid2048 = (props) => {\n  const classes = useStyles();\n  const { items, deadItems, setDeadItems } = props;\n\n  return (\n    <div style={{ width: \"100%\", height: \"100%\" }}>\n      <div className={classes.box} onAnimationEnd={addRandomItem}>\n        {range(16).map((i) => (\n          <BlankItem x={i % 4} y={Math.floor(i / 4)} key={i} />\n        ))}\n        {Object.keys(deadItems).map((id) => (\n          <GridItem\n            items={deadItems}\n            key={id}\n            id={id}\n            dead={true}\n            deadItems={deadItems}\n            setDeadItems={setDeadItems}\n          />\n        ))}\n        {Object.keys(items).map((id) => (\n          <GridItem items={items} key={id} id={id} dead={false} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Grid2048;\n","import { AppBar, CssBaseline, Grid } from \"@material-ui/core\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport \"./App.css\";\nimport Grid2048, { createInitialItems, shift } from \"./components/Grid2048\";\nimport Palette from \"./components/Palette\";\nimport { KEY_BINDINGS } from \"./helpers/common\";\n\nfunction App() {\n  const [score, setScore] = useState(0);\n  const [items, setItems] = useState(createInitialItems());\n  const [deadItems, setDeadItems] = useState({});\n\n  const inputRef = useRef();\n\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const handleKeyDown = (event) => {\n    const states = [items, setItems, score, setScore, deadItems, setDeadItems];\n    switch (event.keyCode) {\n      case KEY_BINDINGS.KEY_LEFT:\n        shift(\"left\", ...states);\n        break;\n      case KEY_BINDINGS.KEY_UP:\n        shift(\"up\", ...states);\n        break;\n      case KEY_BINDINGS.KEY_RIGHT:\n        shift(\"right\", ...states);\n        break;\n      case KEY_BINDINGS.KEY_DOWN:\n        shift(\"down\", ...states);\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <div\n      ref={inputRef}\n      onKeyDown={handleKeyDown}\n      tabIndex={-1}\n      style={{ height: \"100vh\" }}\n    >\n      <Palette>\n        <CssBaseline />\n        <AppBar position=\"static\" bgcolor=\"#6d4c41\">\n          <h1 style={{ padding: \"12px\" }}>2048-React</h1>\n          <h1 style={{ padding: \"12px\", position: \"absolute\", right: \"0\" }}>\n            Score {score}\n          </h1>\n        </AppBar>\n        <Grid container>\n          <Grid item sm={2}></Grid>\n          <Grid\n            container\n            item\n            justify=\"center\"\n            sm={8}\n            style={{ width: \"100%\" }}\n          >\n            <Grid2048\n              items={items}\n              deadItems={deadItems}\n              setDeadItems={setDeadItems}\n            />\n          </Grid>\n          <Grid item sm={2}></Grid>\n        </Grid>\n      </Palette>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}