{"version":3,"sources":["components/Header/Header.module.css","components/GameOver/index.js","components/GameOver/GameOver.jsx","helpers/common.js","helpers/gist.js","components/GridItem/GridItem.jsx","components/GridItem/index.js","components/Grid2048/Grid2048.jsx","components/Grid2048/index.js","components/Header/Header.jsx","components/Header/index.js","components/Palette/Palette.jsx","components/Palette/index.js","components/Sidebar/index.js","components/Sidebar/Sidebar.jsx","App.js","reportWebVitals.js","index.js","components/Sidebar/Sidebar.module.css","components/GridItem/GridItem.module.css","components/GameOver/GameOver.module.css","components/Grid2048/Grid2048.module.css"],"names":["module","exports","GameOver","props","gameOver","Backdrop","open","className","classes","on_top","header","randomInt","max","Math","floor","random","randomId","equals","a","b","Array","length","every","v","i","range","n","keys","randomChoice","list","KEY_BINDINGS","deepCopy","object","JSON","parse","stringify","axios","defaults","headers","Authorization","atob","process","gistId","getGist","get","updateGist","data","patch","toPercentage","num","toString","concat","GridItem","items","id","type","deadItems","setDeadItems","useState","bgcolor","setBgColor","useEffect","colTimeOut","setTimeout","temp","tileColour","clearTimeout","x","y","val","left","top","Box","box","style","text","createInitialItems","initialItems","setInitialItems","someItems","addRandomItem","isSpaceTaken","coords","item","setItems","Object","values","addDeadItem","itemId","itemPos","createGrid","invertAxis","lines","entries","push","sort","shift","direction","states","score","setScore","setPreviousItems","setPreviousScore","coordIndex","includes","newScore","newItems","line","k","splice","reverse","j","key","item2","newJ","Grid2048","setGameOver","blankItems","createInitialBlankItems","nx","ny","isGameOver","container","onAnimationEnd","map","ScoreBox","title","classNames","font_size_1_5vw","zero_margin","font_size_2_5vw","CircularProgress","Header","resetBoardFunc","highScore","undoFunc","main_header","actionBar","Button","variant","color","onClick","Undo","colour_white","refresh_button","Refresh","calcCssColour","colour","out","getComputedStyle","document","documentElement","getPropertyValue","trim","theme","createMuiTheme","palette","primary","main","contrastText","secondary","tertiary","quaternary","background","default","Palette","ThemeProvider","children","Sidebar","leaderboard","username","little_padding","header_container","TextField","label","InputProps","defaultValue","List","no_padding","ListItem","ListItemText","size","App","setHighScore","previousItems","previousScore","timer","setTimer","setLeaderboard","dictionaryList","animals","starWars","names","adjectiveList","adjectives","colors","numberDictionary","NumberDictionary","generate","min","dictionaries","uniqueNamesGenerator","separator","replace","randomName","then","resp","newHighScore","parseInt","files","content","newLeaderboard","setInterval","Date","name","slice","console","log","resetBoard","undo","inputRef","useRef","current","focus","ref","onKeyDown","event","keyCode","tabIndex","CssBaseline","Grid","xs","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cea7b6f9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Header_container__1VC87\",\"header\":\"Header_header__1VCKf\",\"actionBar\":\"Header_actionBar__1RiDW\",\"box\":\"Header_box__1-jsk\",\"main_header\":\"Header_main_header__23YrG\",\"refresh_button\":\"Header_refresh_button__j_4vX\",\"colour_white\":\"Header_colour_white__2cjo3\",\"zero_margin\":\"Header_zero_margin__14M5g\",\"font_size_2_5vw\":\"Header_font_size_2_5vw__2_IJb\",\"font_size_1_5vw\":\"Header_font_size_1_5vw__H3TpT\"};","import { GameOver } from \"./GameOver\";\n\nexport default GameOver;\n","import { Backdrop } from \"@material-ui/core\";\nimport React from \"react\";\nimport classes from \"./GameOver.module.css\";\n\nexport const GameOver = (props) => {\n  const { gameOver } = props;\n\n  return (\n    <Backdrop open={gameOver} className={classes.on_top}>\n      <h1 className={classes.header}>Game Over!</h1>\n    </Backdrop>\n  );\n};\n","import {\n  adjectives,\n  animals,\n  colors,\n  names,\n  NumberDictionary,\n  starWars,\n  uniqueNamesGenerator,\n} from \"unique-names-generator\";\n\nexport const randomInt = (max) => Math.floor(Math.random() * max);\n\nexport const getRandomCoords = () => [randomInt(4), randomInt(4)];\n\nexport const randomId = () => randomInt(1000000);\n\nexport const getRandomNum = () => {\n  const x = Math.random();\n  if (x < 0.9) {\n    return 2;\n  } else {\n    return 4;\n  }\n};\n\nexport const equals = (a, b) => {\n  if (a === b) {\n    return true;\n  } else if (\n    a instanceof Array &&\n    b instanceof Array &&\n    a.length === b.length\n  ) {\n    return a.every((v, i) => equals(v, b[i]));\n  } else {\n    return false;\n  }\n};\n\nexport const range = (n) => [...Array(n).keys()];\n\nexport const randomChoice = (list) => list[randomInt(list.length)];\n\nexport const KEY_BINDINGS = {\n  KEY_LEFT: 37,\n  KEY_UP: 38,\n  KEY_RIGHT: 39,\n  KEY_DOWN: 40,\n};\n\nexport const deepCopy = (object) => JSON.parse(JSON.stringify(object));\n\nexport const randomName = () => {\n  const dictionaryList = [animals, starWars, names];\n\n  const adjectiveList = [[], [adjectives], [colors]];\n\n  const numberDictionary = NumberDictionary.generate({ min: 100, max: 999 });\n\n  const dictionaries = [\n    ...randomChoice(adjectiveList),\n    randomChoice(dictionaryList),\n    numberDictionary,\n  ];\n  return uniqueNamesGenerator({\n    dictionaries,\n    separator: \"\",\n    style: \"capital\",\n  }).replace(/ /g, \"\");\n};\n","import axios from \"axios\";\nimport { randomId } from \"./common\";\n\nconst REACT_APP_GIST_TOKEN = process.env.REACT_APP_GIST_TOKEN || \"\";\n\naxios.defaults.headers = {\n  Authorization: `token ${atob(REACT_APP_GIST_TOKEN)}`,\n};\n\nconst gistId = process.env.REACT_APP_GIST_ID;\n\nexport const getGist = async () => {\n  return axios.get(`https://api.github.com/gists/${gistId}?${randomId()}`);\n};\n\nexport const updateGist = async (data) => {\n  return axios.patch(`https://api.github.com/gists/${gistId}`, data);\n};\n","import { Box } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport classes, { tileColour } from \"./GridItem.module.css\";\n\nconst toPercentage = (num) => num.toString().concat(\"%\");\n\nexport const GridItem = (props) => {\n  const { items, id, type, deadItems, setDeadItems } = props;\n  const [bgcolor, setBgColor] = useState(null);\n\n  useEffect(() => {\n    let colTimeOut;\n    switch (type) {\n      case \"dead\":\n        setBgColor(\"red\");\n        setTimeout(() => {\n          const temp = { ...deadItems };\n          delete temp[id];\n          setDeadItems(temp);\n        }, 100);\n        break;\n      case \"blank\":\n        setBgColor(tileColour);\n        break;\n      default:\n        setBgColor(\"blue\");\n        colTimeOut = setTimeout(() => {\n          setBgColor(\"white\");\n        }, 100);\n        break;\n    }\n    return () => {\n      clearTimeout(colTimeOut);\n    };\n  }, [type, deadItems, id, setBgColor, setDeadItems]);\n\n  var [x, y, val] = items[id];\n\n  var left = toPercentage(x * 25);\n  var top = toPercentage(y * 25);\n\n  return (\n    <Box bgcolor={bgcolor} className={classes.box} style={{ top, left }}>\n      {type === \"blank\" ? null : <h1 className={classes.text}> {val} </h1>}\n    </Box>\n  );\n};\n","import { GridItem } from \"./GridItem\";\n\nexport default GridItem;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  deepCopy,\n  equals,\n  getRandomCoords,\n  getRandomNum,\n  randomId,\n  range,\n} from \"../../helpers/common\";\nimport { getGist, updateGist } from \"../../helpers/gist\";\nimport GridItem from \"../GridItem\";\nimport classes from \"./Grid2048.module.css\";\n\nexport const createInitialItems = () => {\n  var initialItems = {};\n  const setInitialItems = (someItems) => (initialItems = someItems);\n\n  for (var i = 0; i < 2; i++) {\n    addRandomItem(initialItems, setInitialItems);\n  }\n\n  return initialItems;\n};\n\nconst isSpaceTaken = (coords, items) => {\n  for (var item of items) {\n    if (coords[0] === item[0] && coords[1] === item[1]) {\n      return true;\n    }\n  }\n  return false;\n};\n\nconst addRandomItem = (items, setItems) => {\n  let coords;\n  do {\n    coords = getRandomCoords();\n  } while (isSpaceTaken(coords, Object.values(items)));\n\n  setItems({ ...items, [randomId()]: [...coords, getRandomNum()] });\n};\n\nconst addDeadItem = (deadItems, setDeadItems, itemId, itemPos) => {\n  setDeadItems({ ...deadItems, [itemId]: itemPos });\n};\n\nexport const resetBoard = (states) => {\n  const {\n    items,\n    setItems,\n    score,\n    setScore,\n    deadItems,\n    setDeadItems,\n    highScore,\n    setHighScore,\n    setPreviousItems,\n    setPreviousScore,\n    username,\n    setGameOver,\n  } = states;\n  for (var [id, item] of Object.entries(items)) {\n    addDeadItem(deadItems, setDeadItems, id, [item[0], item[1]]);\n  }\n\n  getGist().then((resp) => {\n    const leaderboard = JSON.parse(resp.data.files[\"Leaderboard.json\"].content);\n\n    const newLeaderboard = [...leaderboard, { name: username, score: score }]\n      .sort((a, b) => b.score - a.score)\n      .slice(0, 10);\n    let files = {\n      \"Leaderboard.json\": {\n        content: JSON.stringify(newLeaderboard),\n      },\n    };\n    if (highScore < score) {\n      setHighScore(score);\n      files[\"Highscore.txt\"] = { content: score.toString() };\n    }\n\n    updateGist({ files }).then((resp) => console.log(resp.data));\n\n    // Set previous state\n    setGameOver(false);\n    setPreviousItems(items);\n    setPreviousScore(score);\n\n    setScore(0);\n    setItems(createInitialItems());\n  });\n};\n\nexport const undo = (states) => {\n  const { setItems, setScore, previousItems, previousScore } = states;\n  setScore(previousScore);\n  setItems(previousItems);\n};\n\nconst createGrid = (items, invertAxis = false) => {\n  const lines = [[], [], [], []];\n  for (var [id, item] of Object.entries(deepCopy(items))) {\n    lines[item[invertAxis ? 0 : 1]].push([id, item]);\n  }\n  for (var i = 0; i < 4; i++) {\n    lines[i].sort(\n      (a, b) => a[1][invertAxis ? 1 : 0] - b[1][invertAxis ? 1 : 0]\n    );\n  }\n  return lines;\n};\n\nexport const shift = (direction, states) => {\n  const {\n    items,\n    setItems,\n    score,\n    setScore,\n    deadItems,\n    setDeadItems,\n    setPreviousItems,\n    setPreviousScore,\n  } = states;\n\n  const coordIndex = [\"left\", \"right\"].includes(direction) ? 0 : 1;\n  let newScore = score;\n\n  // Create grid of items\n  const lines = createGrid(items, coordIndex === 1);\n\n  const newItems = {};\n  for (var i = 0; i < lines.length; i++) {\n    const line = lines[i];\n\n    // Sort line into helpful order\n    line.sort((a, b) => a[1][coordIndex] - b[1][coordIndex]);\n\n    // Combine items in line if possible\n    for (var k = 1; k < line.length; k++) {\n      // If adjacent tile (in direction of shift) has the same value\n      if (line[k][1][2] === line[k - 1][1][2]) {\n        // Remove item\n        line[k][1][2] = line[k][1][2] * 2;\n        newScore += line[k][1][2];\n        addDeadItem(deadItems, setDeadItems, ...line[k - 1]);\n        line.splice(k - 1, 1);\n      }\n    }\n\n    // Sort line into correct order (if not already)\n    if ([\"right\", \"down\"].includes(direction)) {\n      line.reverse();\n    }\n\n    // Translate grid indexes to coordinates\n    for (var j = 0; j < line.length; j++) {\n      const [key, item2] = line[j];\n\n      const newJ = [\"right\", \"down\"].includes(direction) ? 3 - j : j;\n\n      newItems[key] = [];\n      newItems[key][1 - coordIndex] = i;\n      newItems[key][coordIndex] = newJ;\n      newItems[key][2] = item2[2];\n    }\n  }\n\n  // Add item to the grid\n  if (!equals(Object.values(newItems), Object.values(items))) {\n    // Set previous state\n    setPreviousItems(items);\n    setPreviousScore(score);\n\n    setScore(newScore);\n\n    setTimeout(() => {\n      addRandomItem(newItems, setItems);\n    }, 1);\n  }\n};\n\nconst createInitialBlankItems = () => {\n  const blankItems = {};\n  for (var i = 0; i < 16; i++) {\n    blankItems[randomId()] = [i % 4, Math.floor(i / 4), 0];\n  }\n  return blankItems;\n};\n\nconst isGameOver = (items) => {\n  const lines = createGrid(items, true);\n  for (const line of lines) {\n    if (line.length < 4) {\n      return false;\n    }\n  }\n\n  for (var item of Object.values(items)) {\n    var [x, y, val] = item;\n    var adjacentCoords = [\n      [x - 1, y],\n      [x + 1, y],\n      [x, y - 1],\n      [x, y + 1],\n    ];\n    for (var [nx, ny] of adjacentCoords) {\n      if (range(4).includes(nx) && range(4).includes(ny)) {\n        var nval = lines[nx][ny][1][2];\n        if (nval === val) {\n          return false;\n        }\n      }\n    }\n  }\n  return true;\n};\n\nexport const Grid2048 = (props) => {\n  const { items, deadItems, setDeadItems, setGameOver } = props;\n  const [blankItems] = useState(createInitialBlankItems());\n\n  useEffect(() => {\n    if (isGameOver(items)) {\n      setTimeout(() => {\n        setGameOver(true);\n      }, 400);\n    }\n  }, [items, setGameOver]);\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.box} onAnimationEnd={addRandomItem}>\n        {Object.keys(blankItems).map((id) => (\n          <GridItem items={blankItems} type=\"blank\" key={id} id={id} />\n        ))}\n        {Object.keys(deadItems).map((id) => (\n          <GridItem\n            items={deadItems}\n            key={id}\n            id={id}\n            type=\"dead\"\n            deadItems={deadItems}\n            setDeadItems={setDeadItems}\n          />\n        ))}\n        {Object.keys(items).map((id) => (\n          <GridItem items={items} key={id} id={id} />\n        ))}\n      </div>\n    </div>\n  );\n};\n","import { Grid2048 } from \"./Grid2048\";\n\nexport { createInitialItems, resetBoard, shift, undo } from \"./Grid2048\";\nexport default Grid2048;\n","import { Button, CircularProgress } from \"@material-ui/core\";\nimport { Refresh, Undo } from \"@material-ui/icons\";\nimport classNames from \"classnames\";\nimport React from \"react\";\nimport classes from \"./Header.module.css\";\n\nconst ScoreBox = (props) => {\n  const { title, score } = props;\n  return (\n    <div className={classes.box}>\n      <h3 className={classNames(classes.font_size_1_5vw, classes.zero_margin)}>\n        {title}\n      </h3>\n      {score > -1 ? (\n        <h2\n          className={classNames(classes.font_size_2_5vw, classes.zero_margin)}\n        >\n          {score}\n        </h2>\n      ) : (\n        <CircularProgress className={classes.font_size_2_5vw} />\n      )}\n    </div>\n  );\n};\n\nexport const Header = (props) => {\n  const { score, resetBoardFunc, highScore, undoFunc } = props;\n  return (\n    <div className={classes.container}>\n      <div className={classes.header}>\n        <h1 className={classes.main_header}>2048-React</h1>\n        <ScoreBox title=\"Score\" score={score} />\n        <ScoreBox title=\"Highscore\" score={highScore} />\n      </div>\n      <div className={classes.actionBar}>\n        <Button variant=\"contained\" color=\"secondary\" onClick={undoFunc}>\n          <Undo className={classes.colour_white} />\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={resetBoardFunc}\n          className={classes.refresh_button}\n        >\n          <Refresh className={classes.colour_white} />\n        </Button>\n      </div>\n    </div>\n  );\n};\n","import { Header } from \"./Header\";\n\nexport default Header;\n","import { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport React from \"react\";\n\nconst calcCssColour = (colour) => {\n  const out = getComputedStyle(document.documentElement)\n    .getPropertyValue(colour)\n    .trim();\n  return out ? out : \"#fff\";\n};\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: calcCssColour(\"--primary-main\"),\n      contrastText: calcCssColour(\"--primary-contrast\"),\n    },\n    secondary: {\n      main: calcCssColour(\"--secondary-main\"),\n      contrastText: calcCssColour(\"--secondary-contrast\"),\n    },\n    tertiary: {\n      main: calcCssColour(\"--tertiary-main\"),\n      contrastText: calcCssColour(\"--tertiary-contrast\"),\n    },\n    quaternary: {\n      main: calcCssColour(\"--quaternary-main\"),\n    },\n    background: {\n      default: calcCssColour(\"--background-default\"),\n    },\n  },\n});\n\nexport function Palette(props) {\n  return <ThemeProvider theme={theme}>{props.children}</ThemeProvider>;\n}\n","import { Palette } from \"./Palette\";\n\nexport default Palette;\n","import { Sidebar } from \"./Sidebar\";\n\nexport default Sidebar;\n","import {\n  CircularProgress,\n  List,\n  ListItem,\n  ListItemText,\n  TextField,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport { range } from \"../../helpers/common\";\nimport classes from \"./Sidebar.module.css\";\n\nexport const Sidebar = (props) => {\n  const { leaderboard, username } = props;\n  return (\n    <div className={classes.little_padding}>\n      <div className={classes.header_container}>\n        <TextField\n          id=\"standard-basic\"\n          label=\"Name\"\n          InputProps={{ className: classes.colour_white }}\n          defaultValue={username}\n        />\n      </div>\n      <div className={classes.container}>\n        <h1 className={classes.header}>LeaderBoard</h1>\n        <List className={classes.no_padding}>\n          {leaderboard ? (\n            range(leaderboard.length).map((x) => (\n              <ListItem className={classes.item}>\n                <ListItemText primary={`${x + 1}.`} />\n                <ListItemText\n                  primary={leaderboard[x][\"name\"]}\n                  secondary={leaderboard[x][\"score\"]}\n                />\n              </ListItem>\n            ))\n          ) : (\n            <CircularProgress size=\"2.5vw\" />\n          )}\n        </List>\n      </div>\n    </div>\n  );\n};\n","import { CssBaseline, Grid } from \"@material-ui/core\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport \"./App.css\";\nimport GameOver from \"./components/GameOver\";\nimport Grid2048, {\n  createInitialItems,\n  resetBoard,\n  shift,\n  undo,\n} from \"./components/Grid2048\";\nimport Header from \"./components/Header\";\nimport Palette from \"./components/Palette\";\nimport Sidebar from \"./components/Sidebar\";\nimport { KEY_BINDINGS, randomName } from \"./helpers/common\";\nimport { getGist } from \"./helpers/gist\";\n\nfunction App() {\n  const [items, setItems] = useState(createInitialItems());\n  const [score, setScore] = useState(0);\n  const [deadItems, setDeadItems] = useState({});\n  const [highScore, setHighScore] = useState(-1);\n  const [previousItems, setPreviousItems] = useState(items);\n  const [previousScore, setPreviousScore] = useState(score);\n  const [gameOver, setGameOver] = useState(false);\n  const [timer, setTimer] = useState(null);\n  const [leaderboard, setLeaderboard] = useState(null);\n  const [username] = useState(randomName());\n\n  useEffect(() => {\n    getGist().then((resp) => {\n      const newHighScore = parseInt(resp.data.files[\"Highscore.txt\"].content);\n      if (newHighScore > highScore) {\n        setHighScore(newHighScore);\n      }\n      const newLeaderboard = JSON.parse(\n        resp.data.files[\"Leaderboard.json\"].content\n      );\n      setLeaderboard(newLeaderboard);\n    });\n  }, [highScore, timer]);\n\n  useEffect(() => {\n    if (!timer) {\n      setInterval(() => {\n        setTimer(new Date());\n      }, 5000);\n    }\n  }, [timer, setTimer]);\n\n  const states = {\n    items,\n    setItems,\n    score,\n    setScore,\n    deadItems,\n    setDeadItems,\n    highScore,\n    setHighScore,\n    previousItems,\n    setPreviousItems,\n    previousScore,\n    setPreviousScore,\n    leaderboard,\n    username,\n    setGameOver,\n  };\n\n  const resetBoardFunc = () => {\n    resetBoard(states);\n  };\n\n  const undoFunc = () => {\n    undo(states);\n  };\n\n  const inputRef = useRef();\n\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const handleKeyDown = (event) => {\n    switch (event.keyCode) {\n      case KEY_BINDINGS.KEY_LEFT:\n        shift(\"left\", states);\n        break;\n      case KEY_BINDINGS.KEY_UP:\n        shift(\"up\", states);\n        break;\n      case KEY_BINDINGS.KEY_RIGHT:\n        shift(\"right\", states);\n        break;\n      case KEY_BINDINGS.KEY_DOWN:\n        shift(\"down\", states);\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <div\n      ref={inputRef}\n      onKeyDown={handleKeyDown}\n      tabIndex={-1}\n      className=\"body\"\n    >\n      <Palette>\n        <CssBaseline />\n        <GameOver\n          gameOver={gameOver}\n          setGameOver={setGameOver}\n          resetBoardFunc={resetBoardFunc}\n          undoFunc={undoFunc}\n        />\n        <Grid container className=\"side-padding\">\n          <Grid container item xs={8}>\n            <Header\n              score={score}\n              highScore={highScore}\n              resetBoardFunc={resetBoardFunc}\n              undoFunc={undoFunc}\n            />\n            <Grid2048\n              items={items}\n              deadItems={deadItems}\n              setDeadItems={setDeadItems}\n              setGameOver={setGameOver}\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <Sidebar leaderboard={leaderboard} username={username} />\n          </Grid>\n        </Grid>\n      </Palette>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Sidebar_item__3zPF1\",\"container\":\"Sidebar_container__3CgDZ\",\"header\":\"Sidebar_header__ozhuF\",\"no_padding\":\"Sidebar_no_padding__ae2sm\",\"little_padding\":\"Sidebar_little_padding__3-euM\",\"header_container\":\"Sidebar_header_container__13qMT\",\"max_width\":\"Sidebar_max_width__303kD\",\"colour_white\":\"Sidebar_colour_white__3F1E8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tileColour\":\"var(--quaternary-main)\",\"box\":\"GridItem_box__2-38H\",\"text\":\"GridItem_text__2lY2m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"GameOver_header__b2OR4\",\"on_top\":\"GameOver_on_top__1-FZG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Grid2048_box__21wtm\",\"container\":\"Grid2048_container__3a0rY\"};"],"sourceRoot":""}