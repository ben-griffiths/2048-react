{"version":3,"sources":["components/GridItem.jsx","components/Palette.jsx","components/BlankItem.jsx","components/Grid2048.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","box","display","position","justifyContent","alignItems","width","height","margin","borderRadius","transition","toPercentage","num","toString","concat","GridItem","props","classes","items","id","x","y","val","left","top","Box","bgcolor","className","classNames","fadeIn","style","theme","createMuiTheme","palette","primary","main","contrastText","secondary","background","default","Palette","ThemeProvider","children","BlankItem","maxWidth","paddingBottom","border","randomInt","max","Math","floor","random","isSpaceTaken","coords","item","addRandomItem","setItems","Object","values","equals","a","b","Array","length","every","v","i","shift","direction","score","setScore","lines","coordIndex","includes","entries","push","newItems","line","sort","k","splice","reverse","j","key","item2","newJ","setTimeout","Grid2048","initialItems","setInitialItems","someItems","n","useState","onKeyDown","event","keyCode","tabIndex","onAnimationEnd","keys","map","App","CssBaseline","AppBar","padding","right","Grid","container","sm","justify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee397dd9.chunk.js","sourcesContent":["import { Box, makeStyles } from \"@material-ui/core\";\nimport React from \"react\";\nimport classNames from \"classnames\";\n\nconst useStyles = makeStyles({\n  box: {\n    display: \"flex\",\n    position: \"absolute\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"calc(25% - 16px)\",\n    height: \"calc(25% - 16px)\",\n    margin: \"8px\",\n    borderRadius: \"16px\",\n    transition: \"all 100ms linear\",\n  },\n});\n\nconst toPercentage = (num) => num.toString().concat(\"%\");\n\nconst GridItem = (props) => {\n  const classes = useStyles();\n  const { items, id } = props;\n\n  var [x, y, val] = items[id];\n  var left = toPercentage(x * 25);\n  var top = toPercentage(y * 25);\n\n  return (\n    <Box\n      bgcolor={\"white\"}\n      className={classNames(classes.box, classes.fadeIn)}\n      style={{ top, left }}\n    >\n      <h1> {val} </h1>\n    </Box>\n  );\n};\n\nexport default GridItem;\n","import React from 'react';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\n\nexport const theme = createMuiTheme({\n  palette: {\n    primary: {\n        main: '#fff3e0',\n        contrastText: '#6d4c41',\n      },\n    secondary: {\n        main: '#9e9e9e',\n        contrastText: '#000',\n    },\n    background: {\n        default: \"#fff3e0\",\n    }\n  },\n});\n\nexport default function Palette(props) {\n  return (\n    <ThemeProvider theme={theme}>\n        { props.children }\n    </ThemeProvider>\n  );\n}","import { Box, makeStyles } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst useStyles = makeStyles({\n  box: {\n    display: \"flex\",\n    position: \"absolute\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"calc(25% - 16px)\",\n    height: \"calc(25% - 16px)\",\n    margin: \"8px\",\n    borderRadius: \"16px\",\n  },\n});\n\nconst toPercentage = (num) => num.toString().concat(\"%\");\n\nconst BlankItem = (props) => {\n  const classes = useStyles();\n  const { x, y } = props;\n\n  var left = toPercentage(x * 25);\n  var top = toPercentage(y * 25);\n\n  return (\n    <Box bgcolor={\"darkgrey\"} className={classes.box} style={{ top, left }} />\n  );\n};\n\nexport default BlankItem;\n","import { makeStyles } from \"@material-ui/core\";\nimport React from \"react\";\nimport GridItem from \"./GridItem\";\nimport { useState } from \"react\";\n\nimport { theme } from \"./Palette\";\nimport BlankItem from \"./BlankItem\";\n\nconst useStyles = makeStyles({\n  box: {\n    width: \"100%\",\n    maxWidth: \"80vh\",\n    paddingBottom: \"min(100%, 80vh)\",\n    margin: \"50px 10px 10px 10px\",\n    position: \"relative\",\n    border: \"8px solid \".concat(theme.palette.secondary.main),\n    background: theme.palette.secondary.main,\n    borderRadius: \"16px\",\n  },\n});\n\nconst randomInt = (max) => Math.floor(Math.random() * max);\n\nconst getRandomCoords = () => [randomInt(4), randomInt(4)];\n\nconst getRandomNum = () => {\n  const x = Math.random();\n  if (x < 0.9) {\n    return 2;\n  } else {\n    return 4;\n  }\n};\n\nconst randomId = () => randomInt(1000000);\n\nconst isSpaceTaken = (coords, items) => {\n  for (var item of items) {\n    if (coords[0] === item[0] && coords[1] === item[1]) {\n      return true;\n    }\n  }\n  return false;\n};\n\nconst addRandomItem = (items, setItems) => {\n  let coords;\n  do {\n    coords = getRandomCoords();\n  } while (isSpaceTaken(coords, Object.values(items)));\n\n  setItems({ ...items, [randomId()]: [...coords, getRandomNum()] });\n};\n\nconst equals = (a, b) => {\n  if (a === b) {\n    return true;\n  } else if (\n    a instanceof Array &&\n    b instanceof Array &&\n    a.length === b.length\n  ) {\n    return a.every((v, i) => equals(v, b[i]));\n  } else {\n    return false;\n  }\n};\n\nconst shift = (direction, items, setItems, score, setScore) => {\n  const lines = [[], [], [], []];\n  const coordIndex = [\"left\", \"right\"].includes(direction) ? 0 : 1;\n\n  // Create grid of items\n  for (var [id, item] of Object.entries(items)) {\n    lines[item[1 - coordIndex]].push([id, item]);\n  }\n\n  const newItems = {};\n  for (var i = 0; i < lines.length; i++) {\n    const line = lines[i];\n\n    // Sort line into helpful\n    line.sort((a, b) => a[1][coordIndex] - b[1][coordIndex]);\n\n    // Combine items in line if possible\n    for (var k = 1; k < line.length; k++) {\n      if (line[k][1][2] === line[k - 1][1][2]) {\n        line[k][1][2] = line[k][1][2] * 2;\n        setScore(score + line[k][1][2]);\n        line.splice(k - 1, 1);\n      }\n    }\n\n    // Sort line into correct order (if not already)\n    if ([\"right\", \"down\"].includes(direction)) {\n      line.reverse();\n    }\n\n    // Translate grid indexes to coordinates\n    for (var j = 0; j < line.length; j++) {\n      const [key, item2] = line[j];\n\n      const newJ = [\"right\", \"down\"].includes(direction) ? 3 - j : j;\n\n      newItems[key] = [];\n      newItems[key][1 - coordIndex] = i;\n      newItems[key][coordIndex] = newJ;\n      newItems[key][2] = item2[2];\n    }\n  }\n  setItems(newItems);\n\n  // Add item to the grid\n  if (!equals(Object.values(newItems), Object.values(items))) {\n    setTimeout(() => {\n      addRandomItem(newItems, setItems);\n    }, 1);\n  }\n};\n\nlet range = (n) => [...Array(n).keys()];\n\nconst Grid2048 = (props) => {\n  const classes = useStyles();\n\n  const { score, setScore } = props;\n\n  var initialItems = {};\n  const setInitialItems = (someItems) => {\n    initialItems = someItems;\n  };\n\n  for (var i = 0; i < 2; i++) {\n    addRandomItem(initialItems, setInitialItems);\n  }\n\n  const [items, setItems] = useState(initialItems);\n\n  const KEY_LEFT = 37;\n  const KEY_UP = 38;\n  const KEY_RIGHT = 39;\n  const KEY_DOWN = 40;\n\n  const handleKeyDown = (event) => {\n    switch (event.keyCode) {\n      case KEY_LEFT:\n        shift(\"left\", items, setItems, score, setScore);\n        break;\n      case KEY_UP:\n        shift(\"up\", items, setItems, score, setScore);\n        break;\n      case KEY_RIGHT:\n        shift(\"right\", items, setItems, score, setScore);\n        break;\n      case KEY_DOWN:\n        shift(\"down\", items, setItems, score, setScore);\n        break;\n      default:\n    }\n  };\n\n  return (\n    <div\n      className={classes.box}\n      onKeyDown={handleKeyDown}\n      tabIndex=\"-1\"\n      onAnimationEnd={addRandomItem}\n    >\n      {range(16).map((i) => (\n        <BlankItem x={i % 4} y={Math.floor(i / 4)} key={i} />\n      ))}\n      {Object.keys(items).map((id) => (\n        <GridItem items={items} key={id} id={id} />\n      ))}\n    </div>\n  );\n};\n\nexport default Grid2048;\n","import { AppBar, CssBaseline, Grid } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport Grid2048 from \"./components/Grid2048\";\nimport Palette from \"./components/Palette\";\n\nfunction App() {\n  const [score, setScore] = useState(0);\n  return (\n    <div>\n      <Palette>\n        <CssBaseline />\n        <AppBar position=\"static\" bgcolor=\"#6d4c41\">\n          <h1 style={{ padding: \"12px\" }}>2048-React</h1>\n          <h1 style={{ padding: \"12px\", position: \"absolute\", right: \"0\" }}>\n            Score {score}\n          </h1>\n        </AppBar>\n        <Grid container>\n          <Grid item sm={2}></Grid>\n          <Grid container justify=\"center\" sm={8} style={{ width: \"100%\" }}>\n            <Grid2048 score={score} setScore={setScore} />\n          </Grid>\n          <Grid item sm={2}></Grid>\n        </Grid>\n      </Palette>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}