{"version":3,"sources":["components/GameOver.jsx","helpers/common.js","helpers/gist.js","components/Palette.jsx","components/GridItem.jsx","components/Grid2048.jsx","components/Header.jsx","components/Sidebar.jsx","App.js","reportWebVitals.js","index.js"],"names":["GameOver","props","gameOver","setGameOver","undoFunc","resetBoardFunc","Backdrop","open","style","zIndex","Grid","color","Button","variant","margin","onClick","Undo","Refresh","randomInt","max","Math","floor","random","randomId","equals","a","b","Array","length","every","v","i","range","n","keys","randomChoice","list","KEY_BINDINGS","deepCopy","object","JSON","parse","stringify","axios","defaults","headers","Authorization","atob","process","gistId","getGist","get","updateGist","data","patch","theme","createMuiTheme","palette","primary","main","contrastText","secondary","tertiary","quaternary","background","default","Palette","ThemeProvider","children","useStyles","makeStyles","box","display","position","justifyContent","alignItems","width","height","borderRadius","transition","toPercentage","num","toString","concat","GridItem","classes","items","id","type","deadItems","setDeadItems","useState","bgcolor","setBgColor","useEffect","colTimeOut","setTimeout","temp","clearTimeout","x","y","val","left","top","Box","className","classNames","fadeIn","fontSize","maxWidth","paddingBottom","marginTop","marginBottom","border","createInitialItems","initialItems","setInitialItems","someItems","addRandomItem","isSpaceTaken","coords","item","setItems","Object","values","addDeadItem","itemId","itemPos","createGrid","invertAxis","lines","entries","push","sort","shift","direction","states","score","setScore","setPreviousItems","setPreviousScore","coordIndex","includes","newScore","newItems","line","k","splice","reverse","j","key","item2","newJ","Grid2048","blankItems","createInitialBlankItems","nx","ny","isGameOver","onAnimationEnd","map","container","flexDirection","header","padding","actionBar","marginLeft","ScoreBox","title","CircularProgress","size","Header","highScore","Sidebar","leaderboard","username","TextField","label","InputProps","defaultValue","List","ListItem","ListItemText","App","setHighScore","previousItems","previousScore","timer","setTimer","setLeaderboard","dictionaryList","animals","starWars","names","adjectiveList","adjectives","colors","numberDictionary","NumberDictionary","generate","min","dictionaries","uniqueNamesGenerator","separator","replace","randomName","then","resp","newHighScore","parseInt","files","content","newLeaderboard","setInterval","Date","name","slice","console","log","resetBoard","undo","inputRef","useRef","current","focus","ref","onKeyDown","event","keyCode","tabIndex","CssBaseline","paddingLeft","paddingRight","xs","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.efe9c94d.chunk.js","sourcesContent":["import { Backdrop, Button, Grid } from \"@material-ui/core\";\r\nimport { Refresh, Undo } from \"@material-ui/icons\";\r\nimport React from \"react\";\r\n\r\nconst GameOver = (props) => {\r\n  const { gameOver, setGameOver, undoFunc, resetBoardFunc } = props;\r\n\r\n  return (\r\n    <Backdrop open={gameOver} style={{ zIndex: 1 }}>\r\n      <Grid>\r\n        <Grid>\r\n          <h1 style={{ color: \"white\" }}>Game Over!</h1>\r\n        </Grid>\r\n        <Grid>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            style={{ margin: \"10px\" }}\r\n            onClick={() => {\r\n              setGameOver(false);\r\n              undoFunc();\r\n            }}\r\n          >\r\n            <Undo style={{ color: \"white\" }} />\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            style={{ margin: \"10px\" }}\r\n            onClick={() => {\r\n              setGameOver(false);\r\n              resetBoardFunc();\r\n            }}\r\n          >\r\n            <Refresh style={{ color: \"white\" }} />\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Backdrop>\r\n  );\r\n};\r\n\r\nexport default GameOver;\r\n","import {\r\n  adjectives,\r\n  animals,\r\n  colors,\r\n  names,\r\n  NumberDictionary,\r\n  starWars,\r\n  uniqueNamesGenerator,\r\n} from \"unique-names-generator\";\r\n\r\nexport const randomInt = (max) => Math.floor(Math.random() * max);\r\n\r\nexport const getRandomCoords = () => [randomInt(4), randomInt(4)];\r\n\r\nexport const randomId = () => randomInt(1000000);\r\n\r\nexport const getRandomNum = () => {\r\n  const x = Math.random();\r\n  if (x < 0.9) {\r\n    return 2;\r\n  } else {\r\n    return 4;\r\n  }\r\n};\r\n\r\nexport const equals = (a, b) => {\r\n  if (a === b) {\r\n    return true;\r\n  } else if (\r\n    a instanceof Array &&\r\n    b instanceof Array &&\r\n    a.length === b.length\r\n  ) {\r\n    return a.every((v, i) => equals(v, b[i]));\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const range = (n) => [...Array(n).keys()];\r\n\r\nexport const randomChoice = (list) => list[randomInt(list.length)];\r\n\r\nexport const KEY_BINDINGS = {\r\n  KEY_LEFT: 37,\r\n  KEY_UP: 38,\r\n  KEY_RIGHT: 39,\r\n  KEY_DOWN: 40,\r\n};\r\n\r\nexport const deepCopy = (object) => JSON.parse(JSON.stringify(object));\r\n\r\nexport const randomName = () => {\r\n  const dictionaryList = [animals, starWars, names];\r\n\r\n  const adjectiveList = [[], [adjectives], [colors]];\r\n\r\n  const numberDictionary = NumberDictionary.generate({ min: 100, max: 999 });\r\n\r\n  const dictionaries = [\r\n    ...randomChoice(adjectiveList),\r\n    randomChoice(dictionaryList),\r\n    numberDictionary,\r\n  ];\r\n  return uniqueNamesGenerator({\r\n    dictionaries,\r\n    separator: \"\",\r\n    style: \"capital\",\r\n  }).replace(/ /g, \"\");\r\n};\r\n","import axios from \"axios\";\r\nimport { randomId } from \"./common\";\r\n\r\nconst REACT_APP_GIST_TOKEN = process.env.REACT_APP_GIST_TOKEN || \"\";\r\n\r\naxios.defaults.headers = {\r\n  Authorization: `token ${atob(REACT_APP_GIST_TOKEN)}`,\r\n};\r\n\r\nconst gistId = process.env.REACT_APP_GIST_ID;\r\n\r\nexport const getGist = async () => {\r\n  return axios.get(`https://api.github.com/gists/${gistId}?${randomId()}`);\r\n};\r\n\r\nexport const updateGist = async (data) => {\r\n  return axios.patch(`https://api.github.com/gists/${gistId}`, data);\r\n};\r\n","import { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport React from \"react\";\r\n\r\nexport const theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#fff3e0\",\r\n      contrastText: \"#6d4c41\",\r\n    },\r\n    secondary: {\r\n      main: \"#9e9e9e\",\r\n      contrastText: \"#000\",\r\n    },\r\n    tertiary: {\r\n      main: \"grey\",\r\n      contrastText: \"#000\",\r\n    },\r\n    quaternary: {\r\n      main: \"darkgrey\",\r\n    },\r\n    background: {\r\n      default: \"#fff3e0\",\r\n    },\r\n  },\r\n});\r\n\r\nexport default function Palette(props) {\r\n  return <ThemeProvider theme={theme}>{props.children}</ThemeProvider>;\r\n}\r\n","import { Box, makeStyles } from \"@material-ui/core\";\r\nimport classNames from \"classnames\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { theme } from \"./Palette\";\r\n\r\nconst useStyles = makeStyles({\r\n  box: {\r\n    display: \"flex\",\r\n    position: \"absolute\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: \"23%\",\r\n    height: \"23%\",\r\n    margin: \"1%\",\r\n    borderRadius: \"10%\",\r\n    transition: \"all 100ms linear\",\r\n  },\r\n});\r\n\r\nconst toPercentage = (num) => num.toString().concat(\"%\");\r\n\r\nconst GridItem = (props) => {\r\n  const classes = useStyles();\r\n  const { items, id, type, deadItems, setDeadItems } = props;\r\n  const [bgcolor, setBgColor] = useState(null);\r\n\r\n  useEffect(() => {\r\n    let colTimeOut;\r\n    switch (type) {\r\n      case \"dead\":\r\n        setBgColor(\"red\");\r\n        setTimeout(() => {\r\n          const temp = { ...deadItems };\r\n          delete temp[id];\r\n          setDeadItems(temp);\r\n        }, 100);\r\n        break;\r\n      case \"blank\":\r\n        setBgColor(theme.palette.quaternary.main);\r\n        break;\r\n      default:\r\n        setBgColor(\"blue\");\r\n        colTimeOut = setTimeout(() => {\r\n          setBgColor(\"white\");\r\n        }, 100);\r\n        break;\r\n    }\r\n    return () => {\r\n      clearTimeout(colTimeOut);\r\n    };\r\n  }, [type, deadItems, id, setBgColor, setDeadItems]);\r\n\r\n  var [x, y, val] = items[id];\r\n\r\n  var left = toPercentage(x * 25);\r\n  var top = toPercentage(y * 25);\r\n\r\n  return (\r\n    <Box\r\n      bgcolor={bgcolor}\r\n      className={classNames(classes.box, classes.fadeIn)}\r\n      style={{ top, left }}\r\n    >\r\n      {type === \"blank\" ? null : <h1 style={{ fontSize: \"7vw\" }}> {val} </h1>}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default GridItem;\r\n","import { makeStyles } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  deepCopy,\r\n  equals,\r\n  getRandomCoords,\r\n  getRandomNum,\r\n  randomId,\r\n  range,\r\n} from \"../helpers/common\";\r\nimport { getGist, updateGist } from \"../helpers/gist\";\r\nimport GridItem from \"./GridItem\";\r\nimport { theme } from \"./Palette\";\r\n\r\nconst useStyles = makeStyles({\r\n  box: {\r\n    width: \"100%\",\r\n    maxWidth: \"80vh\",\r\n    paddingBottom: \"min(100%, 80vh - 35px)\",\r\n    marginTop: \"10px\",\r\n    marginBottom: \"10px\",\r\n    position: \"relative\",\r\n    border: \"0.5vw solid \".concat(theme.palette.secondary.main),\r\n    background: theme.palette.secondary.main,\r\n    borderRadius: \"3%\",\r\n  },\r\n});\r\n\r\nexport const createInitialItems = () => {\r\n  var initialItems = {};\r\n  const setInitialItems = (someItems) => (initialItems = someItems);\r\n\r\n  for (var i = 0; i < 2; i++) {\r\n    addRandomItem(initialItems, setInitialItems);\r\n  }\r\n\r\n  return initialItems;\r\n};\r\n\r\nconst isSpaceTaken = (coords, items) => {\r\n  for (var item of items) {\r\n    if (coords[0] === item[0] && coords[1] === item[1]) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nconst addRandomItem = (items, setItems) => {\r\n  let coords;\r\n  do {\r\n    coords = getRandomCoords();\r\n  } while (isSpaceTaken(coords, Object.values(items)));\r\n\r\n  setItems({ ...items, [randomId()]: [...coords, getRandomNum()] });\r\n};\r\n\r\nconst addDeadItem = (deadItems, setDeadItems, itemId, itemPos) => {\r\n  setDeadItems({ ...deadItems, [itemId]: itemPos });\r\n};\r\n\r\nexport const resetBoard = (states) => {\r\n  const {\r\n    items,\r\n    setItems,\r\n    score,\r\n    setScore,\r\n    deadItems,\r\n    setDeadItems,\r\n    highScore,\r\n    setHighScore,\r\n    setPreviousItems,\r\n    setPreviousScore,\r\n    username,\r\n  } = states;\r\n  for (var [id, item] of Object.entries(items)) {\r\n    addDeadItem(deadItems, setDeadItems, id, [item[0], item[1]]);\r\n  }\r\n\r\n  getGist().then((resp) => {\r\n    const leaderboard = JSON.parse(resp.data.files[\"Leaderboard.json\"].content);\r\n\r\n    const newLeaderboard = [...leaderboard, { name: username, score: score }]\r\n      .sort((a, b) => b.score - a.score)\r\n      .slice(0, 10);\r\n    let files = {\r\n      \"Leaderboard.json\": {\r\n        content: JSON.stringify(newLeaderboard),\r\n      },\r\n    };\r\n    if (highScore < score) {\r\n      setHighScore(score);\r\n      files[\"Highscore.txt\"] = { content: score.toString() };\r\n    }\r\n\r\n    updateGist({ files }).then((resp) => console.log(resp.data));\r\n\r\n    // Set previous state\r\n    setPreviousItems(items);\r\n    setPreviousScore(score);\r\n\r\n    setScore(0);\r\n    setItems(createInitialItems());\r\n  });\r\n};\r\n\r\nexport const undo = (states) => {\r\n  const { setItems, setScore, previousItems, previousScore } = states;\r\n  setScore(previousScore);\r\n  setItems(previousItems);\r\n};\r\n\r\nconst createGrid = (items, invertAxis = false) => {\r\n  const lines = [[], [], [], []];\r\n  for (var [id, item] of Object.entries(deepCopy(items))) {\r\n    lines[item[invertAxis ? 0 : 1]].push([id, item]);\r\n  }\r\n  for (var i = 0; i < 4; i++) {\r\n    lines[i].sort(\r\n      (a, b) => a[1][invertAxis ? 1 : 0] - b[1][invertAxis ? 1 : 0]\r\n    );\r\n  }\r\n  return lines;\r\n};\r\n\r\nexport const shift = (direction, states) => {\r\n  const {\r\n    items,\r\n    setItems,\r\n    score,\r\n    setScore,\r\n    deadItems,\r\n    setDeadItems,\r\n    setPreviousItems,\r\n    setPreviousScore,\r\n  } = states;\r\n\r\n  const coordIndex = [\"left\", \"right\"].includes(direction) ? 0 : 1;\r\n  let newScore = score;\r\n\r\n  // Create grid of items\r\n  const lines = createGrid(items, coordIndex === 1);\r\n\r\n  const newItems = {};\r\n  for (var i = 0; i < lines.length; i++) {\r\n    const line = lines[i];\r\n\r\n    // Sort line into helpful order\r\n    line.sort((a, b) => a[1][coordIndex] - b[1][coordIndex]);\r\n\r\n    // Combine items in line if possible\r\n    for (var k = 1; k < line.length; k++) {\r\n      // If adjacent tile (in direction of shift) has the same value\r\n      if (line[k][1][2] === line[k - 1][1][2]) {\r\n        // Remove item\r\n        line[k][1][2] = line[k][1][2] * 2;\r\n        newScore += line[k][1][2];\r\n        addDeadItem(deadItems, setDeadItems, ...line[k - 1]);\r\n        line.splice(k - 1, 1);\r\n      }\r\n    }\r\n\r\n    // Sort line into correct order (if not already)\r\n    if ([\"right\", \"down\"].includes(direction)) {\r\n      line.reverse();\r\n    }\r\n\r\n    // Translate grid indexes to coordinates\r\n    for (var j = 0; j < line.length; j++) {\r\n      const [key, item2] = line[j];\r\n\r\n      const newJ = [\"right\", \"down\"].includes(direction) ? 3 - j : j;\r\n\r\n      newItems[key] = [];\r\n      newItems[key][1 - coordIndex] = i;\r\n      newItems[key][coordIndex] = newJ;\r\n      newItems[key][2] = item2[2];\r\n    }\r\n  }\r\n\r\n  // Add item to the grid\r\n  if (!equals(Object.values(newItems), Object.values(items))) {\r\n    // Set previous state\r\n    setPreviousItems(items);\r\n    setPreviousScore(score);\r\n\r\n    setScore(newScore);\r\n\r\n    setTimeout(() => {\r\n      addRandomItem(newItems, setItems);\r\n    }, 1);\r\n  }\r\n};\r\n\r\nconst createInitialBlankItems = () => {\r\n  const blankItems = {};\r\n  for (var i = 0; i < 16; i++) {\r\n    blankItems[randomId()] = [i % 4, Math.floor(i / 4), 0];\r\n  }\r\n  return blankItems;\r\n};\r\n\r\nconst isGameOver = (items) => {\r\n  const lines = createGrid(items, true);\r\n  for (const line of lines) {\r\n    if (line.length < 4) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  for (var item of Object.values(items)) {\r\n    var [x, y, val] = item;\r\n    var adjacentCoords = [\r\n      [x - 1, y],\r\n      [x + 1, y],\r\n      [x, y - 1],\r\n      [x, y + 1],\r\n    ];\r\n    for (var [nx, ny] of adjacentCoords) {\r\n      if (range(4).includes(nx) && range(4).includes(ny)) {\r\n        var nval = lines[nx][ny][1][2];\r\n        if (nval === val) {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return true;\r\n};\r\n\r\nconst Grid2048 = (props) => {\r\n  const classes = useStyles();\r\n  const { items, deadItems, setDeadItems, setGameOver } = props;\r\n  const [blankItems] = useState(createInitialBlankItems());\r\n\r\n  useEffect(() => {\r\n    if (isGameOver(items)) {\r\n      setTimeout(() => {\r\n        setGameOver(true);\r\n      }, 400);\r\n    }\r\n  }, [items, setGameOver]);\r\n\r\n  return (\r\n    <div style={{ width: \"100%\" }}>\r\n      <div className={classes.box} onAnimationEnd={addRandomItem}>\r\n        {Object.keys(blankItems).map((id) => (\r\n          <GridItem items={blankItems} type=\"blank\" key={id} id={id} />\r\n        ))}\r\n        {Object.keys(deadItems).map((id) => (\r\n          <GridItem\r\n            items={deadItems}\r\n            key={id}\r\n            id={id}\r\n            type=\"dead\"\r\n            deadItems={deadItems}\r\n            setDeadItems={setDeadItems}\r\n          />\r\n        ))}\r\n        {Object.keys(items).map((id) => (\r\n          <GridItem items={items} key={id} id={id} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Grid2048;\r\n","import { Button, CircularProgress, makeStyles } from \"@material-ui/core\";\r\nimport { Refresh, Undo } from \"@material-ui/icons\";\r\nimport React from \"react\";\r\nimport { theme } from \"./Palette\";\r\n\r\nconst useStyles = makeStyles({\r\n  container: { display: \"flex\", flexDirection: \"column\", width: \"100%\" },\r\n  header: {\r\n    display: \"flex\",\r\n    width: \"100%\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"10px 0 10px 0\",\r\n  },\r\n  actionBar: {\r\n    display: \"flex\",\r\n    width: \"100%\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  box: {\r\n    marginLeft: \"10px\",\r\n    padding: \"12px\",\r\n    background: theme.palette.tertiary.main,\r\n    borderRadius: \"10px\",\r\n    color: \"white\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n  },\r\n});\r\n\r\nconst ScoreBox = (props) => {\r\n  const classes = useStyles();\r\n  const { title, score } = props;\r\n  return (\r\n    <div className={classes.box}>\r\n      <h3 style={{ fontSize: \"1.5vw\", margin: \"0\" }}>{title}</h3>\r\n      {score > -1 ? (\r\n        <h2 style={{ fontSize: \"2.5vw\", margin: \"0\" }}>{score}</h2>\r\n      ) : (\r\n        <CircularProgress size=\"2.5vw\" />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Header = (props) => {\r\n  const { score, resetBoardFunc, highScore, undoFunc } = props;\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.container}>\r\n      <div className={classes.header}>\r\n        <h1 style={{ margin: \"0 auto 0 0\", fontSize: \"min(6vw, 60px)\" }}>\r\n          2048-React\r\n        </h1>\r\n        <ScoreBox title=\"Score\" score={score} />\r\n        <ScoreBox title=\"Highscore\" score={highScore} />\r\n      </div>\r\n      <div className={classes.actionBar}>\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={undoFunc}>\r\n          <Undo style={{ color: \"white\" }} />\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={resetBoardFunc}\r\n          style={{ marginLeft: \"10px\" }}\r\n        >\r\n          <Refresh style={{ color: \"white\" }} />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import {\r\n  CircularProgress,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { range } from \"../helpers/common\";\r\nimport { theme } from \"./Palette\";\r\n\r\nconst Sidebar = (props) => {\r\n  const { leaderboard, username } = props;\r\n  return (\r\n    <div style={{ padding: \"10px\" }}>\r\n      <div\r\n        style={{\r\n          background: theme.palette.tertiary.main,\r\n          padding: \"10px\",\r\n          borderRadius: \"10px\",\r\n        }}\r\n      >\r\n        <TextField\r\n          id=\"standard-basic\"\r\n          label=\"Name\"\r\n          style={{ width: \"100%\" }}\r\n          InputProps={{ style: { color: \"white\" } }}\r\n          defaultValue={username}\r\n        />\r\n      </div>\r\n      <div\r\n        style={{\r\n          background: theme.palette.tertiary.main,\r\n          marginTop: \"10px\",\r\n          padding: \"10px\",\r\n          borderRadius: \"10px\",\r\n        }}\r\n      >\r\n        <h1 style={{ margin: 0, color: \"white\" }}>LeaderBoard</h1>\r\n        <List style={{ padding: 0 }}>\r\n          {leaderboard ? (\r\n            range(leaderboard.length).map((x) => (\r\n              <ListItem\r\n                style={{\r\n                  background: theme.palette.secondary.main,\r\n                  marginTop: \"10px\",\r\n                  padding: \"0 0 0 10px\",\r\n                  borderRadius: \"10px\",\r\n                }}\r\n              >\r\n                <ListItemText primary={`${x + 1}.`} />\r\n                <ListItemText\r\n                  primary={leaderboard[x][\"name\"]}\r\n                  secondary={leaderboard[x][\"score\"]}\r\n                />\r\n              </ListItem>\r\n            ))\r\n          ) : (\r\n            <CircularProgress size=\"2.5vw\" />\r\n          )}\r\n        </List>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import { CssBaseline, Grid } from \"@material-ui/core\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport GameOver from \"./components/GameOver\";\r\nimport Grid2048, {\r\n  createInitialItems,\r\n  resetBoard,\r\n  shift,\r\n  undo,\r\n} from \"./components/Grid2048\";\r\nimport Header from \"./components/Header\";\r\nimport Palette from \"./components/Palette\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport { KEY_BINDINGS, randomName } from \"./helpers/common\";\r\nimport { getGist } from \"./helpers/gist\";\r\n\r\nfunction App() {\r\n  const [items, setItems] = useState(createInitialItems());\r\n  const [score, setScore] = useState(0);\r\n  const [deadItems, setDeadItems] = useState({});\r\n  const [highScore, setHighScore] = useState(-1);\r\n  const [previousItems, setPreviousItems] = useState(items);\r\n  const [previousScore, setPreviousScore] = useState(score);\r\n  const [gameOver, setGameOver] = useState(false);\r\n  const [timer, setTimer] = useState(null);\r\n  const [leaderboard, setLeaderboard] = useState(null);\r\n  const [username] = useState(randomName());\r\n\r\n  useEffect(() => {\r\n    getGist().then((resp) => {\r\n      const newHighScore = parseInt(resp.data.files[\"Highscore.txt\"].content);\r\n      if (newHighScore > highScore) {\r\n        setHighScore(newHighScore);\r\n      }\r\n      const newLeaderboard = JSON.parse(\r\n        resp.data.files[\"Leaderboard.json\"].content\r\n      );\r\n      setLeaderboard(newLeaderboard);\r\n    });\r\n  }, [highScore, timer]);\r\n\r\n  useEffect(() => {\r\n    if (!timer) {\r\n      setInterval(() => {\r\n        setTimer(new Date());\r\n      }, 5000);\r\n    }\r\n  }, [timer, setTimer]);\r\n\r\n  const states = {\r\n    items,\r\n    setItems,\r\n    score,\r\n    setScore,\r\n    deadItems,\r\n    setDeadItems,\r\n    highScore,\r\n    setHighScore,\r\n    previousItems,\r\n    setPreviousItems,\r\n    previousScore,\r\n    setPreviousScore,\r\n    leaderboard,\r\n    username,\r\n  };\r\n\r\n  const resetBoardFunc = () => {\r\n    resetBoard(states);\r\n  };\r\n\r\n  const undoFunc = () => {\r\n    undo(states);\r\n  };\r\n\r\n  const inputRef = useRef();\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus();\r\n  });\r\n\r\n  const handleKeyDown = (event) => {\r\n    switch (event.keyCode) {\r\n      case KEY_BINDINGS.KEY_LEFT:\r\n        shift(\"left\", states);\r\n        break;\r\n      case KEY_BINDINGS.KEY_UP:\r\n        shift(\"up\", states);\r\n        break;\r\n      case KEY_BINDINGS.KEY_RIGHT:\r\n        shift(\"right\", states);\r\n        break;\r\n      case KEY_BINDINGS.KEY_DOWN:\r\n        shift(\"down\", states);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      ref={inputRef}\r\n      onKeyDown={handleKeyDown}\r\n      tabIndex={-1}\r\n      style={{ height: \"100vh\" }}\r\n    >\r\n      <Palette>\r\n        <CssBaseline />\r\n        <GameOver\r\n          gameOver={gameOver}\r\n          setGameOver={setGameOver}\r\n          resetBoardFunc={resetBoardFunc}\r\n          undoFunc={undoFunc}\r\n        />\r\n        <Grid container style={{ paddingLeft: \"10px\", paddingRight: \"10px\" }}>\r\n          <Grid container item xs={8}>\r\n            <Header\r\n              score={score}\r\n              highScore={highScore}\r\n              resetBoardFunc={resetBoardFunc}\r\n              undoFunc={undoFunc}\r\n            />\r\n            <Grid2048\r\n              items={items}\r\n              deadItems={deadItems}\r\n              setDeadItems={setDeadItems}\r\n              setGameOver={setGameOver}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <Sidebar leaderboard={leaderboard} username={username} />\r\n          </Grid>\r\n        </Grid>\r\n      </Palette>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}