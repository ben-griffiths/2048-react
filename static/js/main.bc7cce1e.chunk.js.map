{"version":3,"sources":["components/GameOver.jsx","helpers/common.js","helpers/gist.js","components/Palette.jsx","components/GridItem.jsx","components/Grid2048.jsx","components/Header.jsx","components/Sidebar.jsx","App.js","reportWebVitals.js","index.js"],"names":["GameOver","props","gameOver","Backdrop","open","style","zIndex","color","fontSize","textShadow","randomInt","max","Math","floor","random","randomId","equals","a","b","Array","length","every","v","i","range","n","keys","randomChoice","list","KEY_BINDINGS","deepCopy","object","JSON","parse","stringify","axios","defaults","headers","Authorization","atob","process","gistId","getGist","get","updateGist","data","patch","theme","createMuiTheme","palette","primary","main","contrastText","secondary","tertiary","quaternary","background","default","Palette","ThemeProvider","children","useStyles","makeStyles","box","display","position","justifyContent","alignItems","width","height","margin","borderRadius","transition","toPercentage","num","toString","concat","GridItem","classes","items","id","type","deadItems","setDeadItems","useState","bgcolor","setBgColor","useEffect","colTimeOut","setTimeout","temp","clearTimeout","x","y","val","left","top","Box","className","classNames","fadeIn","maxWidth","paddingBottom","marginTop","marginBottom","border","createInitialItems","initialItems","setInitialItems","someItems","addRandomItem","isSpaceTaken","coords","item","setItems","Object","values","addDeadItem","itemId","itemPos","createGrid","invertAxis","lines","entries","push","sort","shift","direction","states","score","setScore","setPreviousItems","setPreviousScore","coordIndex","includes","newScore","newItems","line","k","splice","reverse","j","key","item2","newJ","Grid2048","setGameOver","blankItems","createInitialBlankItems","nx","ny","isGameOver","onAnimationEnd","map","container","flexDirection","header","padding","actionBar","marginLeft","ScoreBox","title","CircularProgress","size","Header","resetBoardFunc","highScore","undoFunc","Button","variant","onClick","Undo","Refresh","Sidebar","leaderboard","username","TextField","label","InputProps","defaultValue","List","ListItem","ListItemText","App","setHighScore","previousItems","previousScore","timer","setTimer","setLeaderboard","dictionaryList","animals","starWars","names","adjectiveList","adjectives","colors","numberDictionary","NumberDictionary","generate","min","dictionaries","uniqueNamesGenerator","separator","replace","randomName","then","resp","newHighScore","parseInt","files","content","newLeaderboard","setInterval","Date","name","slice","console","log","resetBoard","undo","inputRef","useRef","current","focus","ref","onKeyDown","event","keyCode","tabIndex","CssBaseline","Grid","paddingLeft","paddingRight","xs","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bc7cce1e.chunk.js","sourcesContent":["import { Backdrop } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst GameOver = (props) => {\n  const { gameOver } = props;\n\n  return (\n    <Backdrop open={gameOver} style={{ zIndex: 1 }}>\n      <h1\n        style={{\n          color: \"white\",\n          fontSize: \"6vw\",\n          textShadow: \"3px 3px #000000\",\n        }}\n      >\n        Game Over!\n      </h1>\n    </Backdrop>\n  );\n};\n\nexport default GameOver;\n","import {\n  adjectives,\n  animals,\n  colors,\n  names,\n  NumberDictionary,\n  starWars,\n  uniqueNamesGenerator,\n} from \"unique-names-generator\";\n\nexport const randomInt = (max) => Math.floor(Math.random() * max);\n\nexport const getRandomCoords = () => [randomInt(4), randomInt(4)];\n\nexport const randomId = () => randomInt(1000000);\n\nexport const getRandomNum = () => {\n  const x = Math.random();\n  if (x < 0.9) {\n    return 2;\n  } else {\n    return 4;\n  }\n};\n\nexport const equals = (a, b) => {\n  if (a === b) {\n    return true;\n  } else if (\n    a instanceof Array &&\n    b instanceof Array &&\n    a.length === b.length\n  ) {\n    return a.every((v, i) => equals(v, b[i]));\n  } else {\n    return false;\n  }\n};\n\nexport const range = (n) => [...Array(n).keys()];\n\nexport const randomChoice = (list) => list[randomInt(list.length)];\n\nexport const KEY_BINDINGS = {\n  KEY_LEFT: 37,\n  KEY_UP: 38,\n  KEY_RIGHT: 39,\n  KEY_DOWN: 40,\n};\n\nexport const deepCopy = (object) => JSON.parse(JSON.stringify(object));\n\nexport const randomName = () => {\n  const dictionaryList = [animals, starWars, names];\n\n  const adjectiveList = [[], [adjectives], [colors]];\n\n  const numberDictionary = NumberDictionary.generate({ min: 100, max: 999 });\n\n  const dictionaries = [\n    ...randomChoice(adjectiveList),\n    randomChoice(dictionaryList),\n    numberDictionary,\n  ];\n  return uniqueNamesGenerator({\n    dictionaries,\n    separator: \"\",\n    style: \"capital\",\n  }).replace(/ /g, \"\");\n};\n","import axios from \"axios\";\nimport { randomId } from \"./common\";\n\nconst REACT_APP_GIST_TOKEN = process.env.REACT_APP_GIST_TOKEN || \"\";\n\naxios.defaults.headers = {\n  Authorization: `token ${atob(REACT_APP_GIST_TOKEN)}`,\n};\n\nconst gistId = process.env.REACT_APP_GIST_ID;\n\nexport const getGist = async () => {\n  return axios.get(`https://api.github.com/gists/${gistId}?${randomId()}`);\n};\n\nexport const updateGist = async (data) => {\n  return axios.patch(`https://api.github.com/gists/${gistId}`, data);\n};\n","import { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport React from \"react\";\n\nexport const theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#fff3e0\",\n      contrastText: \"#6d4c41\",\n    },\n    secondary: {\n      main: \"#9e9e9e\",\n      contrastText: \"#000\",\n    },\n    tertiary: {\n      main: \"grey\",\n      contrastText: \"#000\",\n    },\n    quaternary: {\n      main: \"darkgrey\",\n    },\n    background: {\n      default: \"#fff3e0\",\n    },\n  },\n});\n\nexport default function Palette(props) {\n  return <ThemeProvider theme={theme}>{props.children}</ThemeProvider>;\n}\n","import { Box, makeStyles } from \"@material-ui/core\";\nimport classNames from \"classnames\";\nimport React, { useEffect, useState } from \"react\";\nimport { theme } from \"./Palette\";\n\nconst useStyles = makeStyles({\n  box: {\n    display: \"flex\",\n    position: \"absolute\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"23%\",\n    height: \"23%\",\n    margin: \"1%\",\n    borderRadius: \"10%\",\n    transition: \"all 100ms linear\",\n  },\n});\n\nconst toPercentage = (num) => num.toString().concat(\"%\");\n\nconst GridItem = (props) => {\n  const classes = useStyles();\n  const { items, id, type, deadItems, setDeadItems } = props;\n  const [bgcolor, setBgColor] = useState(null);\n\n  useEffect(() => {\n    let colTimeOut;\n    switch (type) {\n      case \"dead\":\n        setBgColor(\"red\");\n        setTimeout(() => {\n          const temp = { ...deadItems };\n          delete temp[id];\n          setDeadItems(temp);\n        }, 100);\n        break;\n      case \"blank\":\n        setBgColor(theme.palette.quaternary.main);\n        break;\n      default:\n        setBgColor(\"blue\");\n        colTimeOut = setTimeout(() => {\n          setBgColor(\"white\");\n        }, 100);\n        break;\n    }\n    return () => {\n      clearTimeout(colTimeOut);\n    };\n  }, [type, deadItems, id, setBgColor, setDeadItems]);\n\n  var [x, y, val] = items[id];\n\n  var left = toPercentage(x * 25);\n  var top = toPercentage(y * 25);\n\n  return (\n    <Box\n      bgcolor={bgcolor}\n      className={classNames(classes.box, classes.fadeIn)}\n      style={{ top, left }}\n    >\n      {type === \"blank\" ? null : <h1 style={{ fontSize: \"7vw\" }}> {val} </h1>}\n    </Box>\n  );\n};\n\nexport default GridItem;\n","import { makeStyles } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  deepCopy,\n  equals,\n  getRandomCoords,\n  getRandomNum,\n  randomId,\n  range,\n} from \"../helpers/common\";\nimport { getGist, updateGist } from \"../helpers/gist\";\nimport GridItem from \"./GridItem\";\nimport { theme } from \"./Palette\";\n\nconst useStyles = makeStyles({\n  box: {\n    width: \"100%\",\n    maxWidth: \"80vh\",\n    paddingBottom: \"min(100%, 80vh - 35px)\",\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    position: \"relative\",\n    border: \"0.5vw solid \".concat(theme.palette.secondary.main),\n    background: theme.palette.secondary.main,\n    borderRadius: \"3%\",\n  },\n});\n\nexport const createInitialItems = () => {\n  var initialItems = {};\n  const setInitialItems = (someItems) => (initialItems = someItems);\n\n  for (var i = 0; i < 2; i++) {\n    addRandomItem(initialItems, setInitialItems);\n  }\n\n  return initialItems;\n};\n\nconst isSpaceTaken = (coords, items) => {\n  for (var item of items) {\n    if (coords[0] === item[0] && coords[1] === item[1]) {\n      return true;\n    }\n  }\n  return false;\n};\n\nconst addRandomItem = (items, setItems) => {\n  let coords;\n  do {\n    coords = getRandomCoords();\n  } while (isSpaceTaken(coords, Object.values(items)));\n\n  setItems({ ...items, [randomId()]: [...coords, getRandomNum()] });\n};\n\nconst addDeadItem = (deadItems, setDeadItems, itemId, itemPos) => {\n  setDeadItems({ ...deadItems, [itemId]: itemPos });\n};\n\nexport const resetBoard = (states) => {\n  const {\n    items,\n    setItems,\n    score,\n    setScore,\n    deadItems,\n    setDeadItems,\n    highScore,\n    setHighScore,\n    setPreviousItems,\n    setPreviousScore,\n    username,\n    setGameOver,\n  } = states;\n  for (var [id, item] of Object.entries(items)) {\n    addDeadItem(deadItems, setDeadItems, id, [item[0], item[1]]);\n  }\n\n  getGist().then((resp) => {\n    const leaderboard = JSON.parse(resp.data.files[\"Leaderboard.json\"].content);\n\n    const newLeaderboard = [...leaderboard, { name: username, score: score }]\n      .sort((a, b) => b.score - a.score)\n      .slice(0, 10);\n    let files = {\n      \"Leaderboard.json\": {\n        content: JSON.stringify(newLeaderboard),\n      },\n    };\n    if (highScore < score) {\n      setHighScore(score);\n      files[\"Highscore.txt\"] = { content: score.toString() };\n    }\n\n    updateGist({ files }).then((resp) => console.log(resp.data));\n\n    // Set previous state\n    setGameOver(false);\n    setPreviousItems(items);\n    setPreviousScore(score);\n\n    setScore(0);\n    setItems(createInitialItems());\n  });\n};\n\nexport const undo = (states) => {\n  const { setItems, setScore, previousItems, previousScore } = states;\n  setScore(previousScore);\n  setItems(previousItems);\n};\n\nconst createGrid = (items, invertAxis = false) => {\n  const lines = [[], [], [], []];\n  for (var [id, item] of Object.entries(deepCopy(items))) {\n    lines[item[invertAxis ? 0 : 1]].push([id, item]);\n  }\n  for (var i = 0; i < 4; i++) {\n    lines[i].sort(\n      (a, b) => a[1][invertAxis ? 1 : 0] - b[1][invertAxis ? 1 : 0]\n    );\n  }\n  return lines;\n};\n\nexport const shift = (direction, states) => {\n  const {\n    items,\n    setItems,\n    score,\n    setScore,\n    deadItems,\n    setDeadItems,\n    setPreviousItems,\n    setPreviousScore,\n  } = states;\n\n  const coordIndex = [\"left\", \"right\"].includes(direction) ? 0 : 1;\n  let newScore = score;\n\n  // Create grid of items\n  const lines = createGrid(items, coordIndex === 1);\n\n  const newItems = {};\n  for (var i = 0; i < lines.length; i++) {\n    const line = lines[i];\n\n    // Sort line into helpful order\n    line.sort((a, b) => a[1][coordIndex] - b[1][coordIndex]);\n\n    // Combine items in line if possible\n    for (var k = 1; k < line.length; k++) {\n      // If adjacent tile (in direction of shift) has the same value\n      if (line[k][1][2] === line[k - 1][1][2]) {\n        // Remove item\n        line[k][1][2] = line[k][1][2] * 2;\n        newScore += line[k][1][2];\n        addDeadItem(deadItems, setDeadItems, ...line[k - 1]);\n        line.splice(k - 1, 1);\n      }\n    }\n\n    // Sort line into correct order (if not already)\n    if ([\"right\", \"down\"].includes(direction)) {\n      line.reverse();\n    }\n\n    // Translate grid indexes to coordinates\n    for (var j = 0; j < line.length; j++) {\n      const [key, item2] = line[j];\n\n      const newJ = [\"right\", \"down\"].includes(direction) ? 3 - j : j;\n\n      newItems[key] = [];\n      newItems[key][1 - coordIndex] = i;\n      newItems[key][coordIndex] = newJ;\n      newItems[key][2] = item2[2];\n    }\n  }\n\n  // Add item to the grid\n  if (!equals(Object.values(newItems), Object.values(items))) {\n    // Set previous state\n    setPreviousItems(items);\n    setPreviousScore(score);\n\n    setScore(newScore);\n\n    setTimeout(() => {\n      addRandomItem(newItems, setItems);\n    }, 1);\n  }\n};\n\nconst createInitialBlankItems = () => {\n  const blankItems = {};\n  for (var i = 0; i < 16; i++) {\n    blankItems[randomId()] = [i % 4, Math.floor(i / 4), 0];\n  }\n  return blankItems;\n};\n\nconst isGameOver = (items) => {\n  const lines = createGrid(items, true);\n  for (const line of lines) {\n    if (line.length < 4) {\n      return false;\n    }\n  }\n\n  for (var item of Object.values(items)) {\n    var [x, y, val] = item;\n    var adjacentCoords = [\n      [x - 1, y],\n      [x + 1, y],\n      [x, y - 1],\n      [x, y + 1],\n    ];\n    for (var [nx, ny] of adjacentCoords) {\n      if (range(4).includes(nx) && range(4).includes(ny)) {\n        var nval = lines[nx][ny][1][2];\n        if (nval === val) {\n          return false;\n        }\n      }\n    }\n  }\n  return true;\n};\n\nconst Grid2048 = (props) => {\n  const classes = useStyles();\n  const { items, deadItems, setDeadItems, setGameOver } = props;\n  const [blankItems] = useState(createInitialBlankItems());\n\n  useEffect(() => {\n    if (isGameOver(items)) {\n      setTimeout(() => {\n        setGameOver(true);\n      }, 400);\n    }\n  }, [items, setGameOver]);\n\n  return (\n    <div style={{ width: \"100%\" }}>\n      <div className={classes.box} onAnimationEnd={addRandomItem}>\n        {Object.keys(blankItems).map((id) => (\n          <GridItem items={blankItems} type=\"blank\" key={id} id={id} />\n        ))}\n        {Object.keys(deadItems).map((id) => (\n          <GridItem\n            items={deadItems}\n            key={id}\n            id={id}\n            type=\"dead\"\n            deadItems={deadItems}\n            setDeadItems={setDeadItems}\n          />\n        ))}\n        {Object.keys(items).map((id) => (\n          <GridItem items={items} key={id} id={id} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Grid2048;\n","import { Button, CircularProgress, makeStyles } from \"@material-ui/core\";\nimport { Refresh, Undo } from \"@material-ui/icons\";\nimport React from \"react\";\nimport { theme } from \"./Palette\";\n\nconst useStyles = makeStyles({\n  container: { display: \"flex\", flexDirection: \"column\", width: \"100%\" },\n  header: {\n    display: \"flex\",\n    width: \"100%\",\n    justifyContent: \"flex-end\",\n    padding: \"10px 0 10px 0\",\n  },\n  actionBar: {\n    display: \"flex\",\n    width: \"100%\",\n    justifyContent: \"flex-end\",\n  },\n  box: {\n    marginLeft: \"10px\",\n    padding: \"12px\",\n    background: theme.palette.tertiary.main,\n    borderRadius: \"10px\",\n    color: \"white\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n  },\n});\n\nconst ScoreBox = (props) => {\n  const classes = useStyles();\n  const { title, score } = props;\n  return (\n    <div className={classes.box}>\n      <h3 style={{ fontSize: \"1.5vw\", margin: \"0\" }}>{title}</h3>\n      {score > -1 ? (\n        <h2 style={{ fontSize: \"2.5vw\", margin: \"0\" }}>{score}</h2>\n      ) : (\n        <CircularProgress size=\"2.5vw\" />\n      )}\n    </div>\n  );\n};\n\nconst Header = (props) => {\n  const { score, resetBoardFunc, highScore, undoFunc } = props;\n  const classes = useStyles();\n  return (\n    <div className={classes.container}>\n      <div className={classes.header}>\n        <h1 style={{ margin: \"0 auto 0 0\", fontSize: \"min(6vw, 60px)\" }}>\n          2048-React\n        </h1>\n        <ScoreBox title=\"Score\" score={score} />\n        <ScoreBox title=\"Highscore\" score={highScore} />\n      </div>\n      <div className={classes.actionBar}>\n        <Button variant=\"contained\" color=\"secondary\" onClick={undoFunc}>\n          <Undo style={{ color: \"white\" }} />\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={resetBoardFunc}\n          style={{ marginLeft: \"10px\", zIndex: 10 }}\n        >\n          <Refresh style={{ color: \"white\" }} />\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import {\n  CircularProgress,\n  List,\n  ListItem,\n  ListItemText,\n  TextField,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport { range } from \"../helpers/common\";\nimport { theme } from \"./Palette\";\n\nconst Sidebar = (props) => {\n  const { leaderboard, username } = props;\n  return (\n    <div style={{ padding: \"10px\" }}>\n      <div\n        style={{\n          background: theme.palette.tertiary.main,\n          padding: \"10px\",\n          borderRadius: \"10px\",\n        }}\n      >\n        <TextField\n          id=\"standard-basic\"\n          label=\"Name\"\n          style={{ width: \"100%\" }}\n          InputProps={{ style: { color: \"white\" } }}\n          defaultValue={username}\n        />\n      </div>\n      <div\n        style={{\n          background: theme.palette.tertiary.main,\n          marginTop: \"10px\",\n          padding: \"10px\",\n          borderRadius: \"10px\",\n        }}\n      >\n        <h1 style={{ margin: 0, color: \"white\" }}>LeaderBoard</h1>\n        <List style={{ padding: 0 }}>\n          {leaderboard ? (\n            range(leaderboard.length).map((x) => (\n              <ListItem\n                style={{\n                  background: theme.palette.secondary.main,\n                  marginTop: \"10px\",\n                  padding: \"0 0 0 10px\",\n                  borderRadius: \"10px\",\n                }}\n              >\n                <ListItemText primary={`${x + 1}.`} />\n                <ListItemText\n                  primary={leaderboard[x][\"name\"]}\n                  secondary={leaderboard[x][\"score\"]}\n                />\n              </ListItem>\n            ))\n          ) : (\n            <CircularProgress size=\"2.5vw\" />\n          )}\n        </List>\n      </div>\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import { CssBaseline, Grid } from \"@material-ui/core\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport \"./App.css\";\nimport GameOver from \"./components/GameOver\";\nimport Grid2048, {\n  createInitialItems,\n  resetBoard,\n  shift,\n  undo,\n} from \"./components/Grid2048\";\nimport Header from \"./components/Header\";\nimport Palette from \"./components/Palette\";\nimport Sidebar from \"./components/Sidebar\";\nimport { KEY_BINDINGS, randomName } from \"./helpers/common\";\nimport { getGist } from \"./helpers/gist\";\n\nfunction App() {\n  const [items, setItems] = useState(createInitialItems());\n  const [score, setScore] = useState(0);\n  const [deadItems, setDeadItems] = useState({});\n  const [highScore, setHighScore] = useState(-1);\n  const [previousItems, setPreviousItems] = useState(items);\n  const [previousScore, setPreviousScore] = useState(score);\n  const [gameOver, setGameOver] = useState(false);\n  const [timer, setTimer] = useState(null);\n  const [leaderboard, setLeaderboard] = useState(null);\n  const [username] = useState(randomName());\n\n  useEffect(() => {\n    getGist().then((resp) => {\n      const newHighScore = parseInt(resp.data.files[\"Highscore.txt\"].content);\n      if (newHighScore > highScore) {\n        setHighScore(newHighScore);\n      }\n      const newLeaderboard = JSON.parse(\n        resp.data.files[\"Leaderboard.json\"].content\n      );\n      setLeaderboard(newLeaderboard);\n    });\n  }, [highScore, timer]);\n\n  useEffect(() => {\n    if (!timer) {\n      setInterval(() => {\n        setTimer(new Date());\n      }, 5000);\n    }\n  }, [timer, setTimer]);\n\n  const states = {\n    items,\n    setItems,\n    score,\n    setScore,\n    deadItems,\n    setDeadItems,\n    highScore,\n    setHighScore,\n    previousItems,\n    setPreviousItems,\n    previousScore,\n    setPreviousScore,\n    leaderboard,\n    username,\n    setGameOver,\n  };\n\n  const resetBoardFunc = () => {\n    resetBoard(states);\n  };\n\n  const undoFunc = () => {\n    undo(states);\n  };\n\n  const inputRef = useRef();\n\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const handleKeyDown = (event) => {\n    switch (event.keyCode) {\n      case KEY_BINDINGS.KEY_LEFT:\n        shift(\"left\", states);\n        break;\n      case KEY_BINDINGS.KEY_UP:\n        shift(\"up\", states);\n        break;\n      case KEY_BINDINGS.KEY_RIGHT:\n        shift(\"right\", states);\n        break;\n      case KEY_BINDINGS.KEY_DOWN:\n        shift(\"down\", states);\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <div\n      ref={inputRef}\n      onKeyDown={handleKeyDown}\n      tabIndex={-1}\n      style={{ height: \"100vh\" }}\n    >\n      <Palette>\n        <CssBaseline />\n        <GameOver\n          gameOver={gameOver}\n          setGameOver={setGameOver}\n          resetBoardFunc={resetBoardFunc}\n          undoFunc={undoFunc}\n        />\n        <Grid container style={{ paddingLeft: \"10px\", paddingRight: \"10px\" }}>\n          <Grid container item xs={8}>\n            <Header\n              score={score}\n              highScore={highScore}\n              resetBoardFunc={resetBoardFunc}\n              undoFunc={undoFunc}\n            />\n            <Grid2048\n              items={items}\n              deadItems={deadItems}\n              setDeadItems={setDeadItems}\n              setGameOver={setGameOver}\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <Sidebar leaderboard={leaderboard} username={username} />\n          </Grid>\n        </Grid>\n      </Palette>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}