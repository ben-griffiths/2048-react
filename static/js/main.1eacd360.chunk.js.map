{"version":3,"sources":["components/GridItem.jsx","components/Palette.jsx","components/Grid2048.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","box","display","position","justifyContent","alignItems","width","height","margin","borderRadius","toPercentage","num","toString","concat","GridItem","props","index","classes","top","Math","floor","left","bgcolor","Box","className","style","theme","createMuiTheme","palette","primary","main","contrastText","secondary","background","default","Palette","ThemeProvider","children","paddingBottom","border","getRandomNum","x","random","Grid2048","items","i","push","map","App","CssBaseline","AppBar","padding","Grid","container","item","sm","justify","alignContent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAGMA,EAAYC,YAAW,CACzBC,IAAK,CACDC,QAAS,OACTC,SAAU,WACVC,eAAgB,SAChBC,WAAY,SACZC,MAAO,mBACPC,OAAO,mBACPC,OAAQ,MACRC,aAAc,UAIhBC,EAAe,SAACC,GAAD,OAAUA,EAAIC,WAAWC,OAAO,MAmBtCC,EAjBE,SAACC,GAAW,IACjBJ,EAAeI,EAAfJ,IAAKK,EAAUD,EAAVC,MACPC,EAAUlB,IAEVmB,EAAM,GAAKC,KAAKC,MAAMJ,EAAQ,GAC9BK,EAAaL,EAAQ,EAAd,GAEPM,EAAUX,EAAM,EAAI,QAAU,WACpC,OACI,cAACY,EAAA,EAAD,CAAKD,QAASA,EAASE,UAAWP,EAAQhB,IACtCwB,MAAO,CAACP,IAAKR,EAAaQ,GAAMG,KAAMX,EAAaW,IADvD,SAGMV,EAAM,EAAI,mCAAMA,EAAN,OAAmB,Q,gBC1B9Be,EAAQC,YAAe,CAClCC,QAAS,CACPC,QAAS,CACLC,KAAM,UACNC,aAAc,WAElBC,UAAW,CACPF,KAAM,UACNC,aAAc,QAElBE,WAAY,CACRC,QAAS,cAKF,SAASC,EAAQpB,GAC9B,OACE,cAACqB,EAAA,EAAD,CAAeV,MAAOA,EAAtB,SACMX,EAAMsB,WCjBhB,IAAMtC,EAAYC,YAAW,CACzBC,IAAK,CACDK,MAAO,OACPE,OAAQ,sBACR8B,cAAe,OACfnC,SAAU,WACVoC,OAAQ,aAAa1B,OAAOa,EAAME,QAAQI,UAAUF,MACpDG,WAAYP,EAAME,QAAQI,UAAUF,KACpCrB,aAAc,UAItB,SAAS+B,IACL,IAAMC,EAAItB,KAAKuB,SACf,OAAID,EAAI,GACG,EACAA,EAAI,IACJ,EAEA,EAKf,IAiBeE,EAjBE,SAAC5B,GAId,IAHA,IAAME,EAAUlB,IAEV6C,EAAQ,GACLC,EAAI,EAAGA,EAAI,GAAIA,IACpBD,EAAME,KAAKN,KAGf,OACI,qBAAKhB,UAAWP,EAAQhB,IAAxB,SACK2C,EAAMG,KAAI,SAACpC,EAAKK,GAAN,OACP,cAAC,EAAD,CAAUL,IAAKA,EAAKK,MAAOA,UCV5BgC,MArBf,WACE,OACE,qBAAKvB,MAAO,CAAClB,OAAQ,QAArB,SACE,eAAC4B,EAAD,WACE,cAACc,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAQ/C,SAAS,SAASmB,QAAQ,UAAlC,SACE,oBAAIG,MAAO,CAAC0B,QAAS,QAArB,2BAEF,eAACC,EAAA,EAAD,CAAMC,WAAS,EAAC5B,MAAO,CAAClB,OAAQ,QAAhC,UACE,cAAC6C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACf,cAACH,EAAA,EAAD,CAAME,MAAI,EAACD,WAAS,EACpBG,QAAQ,SAASC,aAAa,SAAShC,MAAO,CAAClB,OAAQ,QAAUgD,GAAI,EADrE,SAEE,cAAC,EAAD,MAEF,cAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,aCZVG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1eacd360.chunk.js","sourcesContent":["import { Box, ClickAwayListener, Grid, makeStyles } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nconst useStyles = makeStyles({\r\n    box: {\r\n        display: \"flex\",\r\n        position: \"absolute\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        width: \"calc(25% - 16px)\",\r\n        height:\"calc(25% - 16px)\",\r\n        margin: \"8px\",\r\n        borderRadius: \"16px\"\r\n    }\r\n})\r\n\r\nconst toPercentage = (num) => (num.toString().concat(\"%\"))\r\n\r\nconst GridItem = (props) => {\r\n    const { num, index } = props;\r\n    const classes = useStyles();\r\n    \r\n    const top = 25 * Math.floor(index / 4)\r\n    const left = 25 * (index % 4)\r\n\r\n    const bgcolor = num > 0 ? \"white\" : \"darkgrey\"\r\n    return (\r\n        <Box bgcolor={bgcolor} className={classes.box} \r\n            style={{top: toPercentage(top), left: toPercentage(left)}}\r\n        >\r\n            { num > 0 ? <h1> {num} </h1> : null }\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default GridItem;\r\n","import React from 'react';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\n\r\nexport const theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n        main: '#fff3e0',\r\n        contrastText: '#6d4c41',\r\n      },\r\n    secondary: {\r\n        main: '#9e9e9e',\r\n        contrastText: '#000',\r\n    },\r\n    background: {\r\n        default: \"#fff3e0\",\r\n    }\r\n  },\r\n});\r\n\r\nexport default function Palette(props) {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n        { props.children }\r\n    </ThemeProvider>\r\n  );\r\n}","import { Box, makeStyles } from '@material-ui/core';\r\nimport React from 'react';\r\nimport GridItem from './GridItem';\r\n\r\nimport {theme} from \"./Palette\"\r\n\r\nconst useStyles = makeStyles({\r\n    box: {\r\n        width: \"100%\",\r\n        margin: \"50px 10px 10px 10px\",\r\n        paddingBottom: \"100%\",\r\n        position: \"relative\",\r\n        border: \"8px solid \".concat(theme.palette.secondary.main),\r\n        background: theme.palette.secondary.main,\r\n        borderRadius: \"16px\",\r\n    }\r\n})\r\n\r\nfunction getRandomNum() {\r\n    const x = Math.random();\r\n    if (x < 0.7) {\r\n        return 0;\r\n    } else if (x < 0.95) {\r\n        return 2;\r\n    } else {\r\n        return 4;\r\n    }\r\n  }\r\n\r\n\r\nconst Grid2048 = (props) => {\r\n    const classes = useStyles();\r\n\r\n    const items = [];\r\n    for (var i = 0; i < 16; i++) {\r\n        items.push(getRandomNum());\r\n    }\r\n\r\n    return (\r\n        <div className={classes.box}>\r\n            {items.map((num, index) => (\r\n                <GridItem num={num} index={index}/>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Grid2048;\r\n","import { AppBar, CssBaseline, Grid } from '@material-ui/core';\nimport React from 'react';\nimport './App.css';\nimport Grid2048 from './components/Grid2048';\nimport GridItem from './components/GridItem';\n\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport Palette from './components/Palette';\n\n\nfunction App() {\n  return (\n    <div style={{height: \"100%\"}} >\n      <Palette>\n        <CssBaseline />\n        <AppBar position=\"static\" bgcolor=\"#6d4c41\">\n          <h1 style={{padding: \"12px\"}}> 2048-React</h1>\n        </AppBar>\n        <Grid container style={{height: \"100%\"}} >\n          <Grid item sm={2}></Grid>\n          <Grid item container \n          justify=\"center\" alignContent=\"center\" style={{height: \"100%\"}}  sm={8}>\n            <Grid2048 />\n          </Grid>\n          <Grid item sm={2}></Grid>\n        </Grid>\n      </Palette>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}